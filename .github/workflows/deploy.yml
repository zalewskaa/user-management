name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: "20.18.0"
          cache: "npm"

      - name: Clean install dependencies (CI optimized)
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          # Use omit instead of no-optional for better compatibility
          npm install --omit=optional --legacy-peer-deps --prefer-offline
        env:
          # Force Rollup to use JavaScript implementation
          ROLLUP_NO_NATIVE: true
          NODE_ENV: production

      - name: Build for GitHub Pages (with fallbacks)
        run: |
          echo "üî® Attempting CI-optimized build..."
          npm run build:clean || {
            echo "‚ùå CI build failed, trying alternative..."
            rm -rf dist
            npm run build:gh-pages || {
              echo "‚ùå GitHub Pages build failed, trying basic build..."
              rm -rf dist
              npm run build
            }
          }
        env:
          ROLLUP_NO_NATIVE: true
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "üìÅ Build contents:"
          ls -la dist/
          echo "üìä Asset sizes:"
          ls -lh dist/assets/ || echo "No assets directory found"
          echo "üîç Checking critical files:"
          test -f dist/index.html && echo "‚úÖ index.html exists" || echo "‚ùå index.html missing"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
